services:
  # Next.js Video Social Network Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-social-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo-db:27017/video_social_db
      - MONGODB_DB=video_social_db
      - REDIS_URL=redis://redis-cache:6379
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    depends_on:
      mongo-db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
    networks:
      - video-social-network
    volumes:
      - app-uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongo-db:
    image: mongo:7.0
    container_name: video-social-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=video_social_db
    volumes:
      - mongodb-data:/data/db
      - ./docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - video-social-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis-cache:
    image: redis:7.2-alpine
    container_name: video-social-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    command: sh -c "redis-server --requirepass $$REDIS_PASSWORD --appendonly yes"
    volumes:
      - redis-data:/data
    networks:
      - video-social-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:1.24-alpine
    container_name: video-social-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - video-social-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  video-social-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes for persistent data
volumes:
  mongodb-data:
    driver: local
  redis-data:
    driver: local
  app-uploads:
    driver: local
  nginx-logs:
    driver: local